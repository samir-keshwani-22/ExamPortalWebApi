//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./Grammar/PseudoQueryExpression.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="PseudoQueryExpressionParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IPseudoQueryExpressionListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] PseudoQueryExpressionParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] PseudoQueryExpressionParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery([NotNull] PseudoQueryExpressionParser.QueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery([NotNull] PseudoQueryExpressionParser.QueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.aggregateQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregateQuery([NotNull] PseudoQueryExpressionParser.AggregateQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.aggregateQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregateQuery([NotNull] PseudoQueryExpressionParser.AggregateQueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.aggregateList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregateList([NotNull] PseudoQueryExpressionParser.AggregateListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.aggregateList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregateList([NotNull] PseudoQueryExpressionParser.AggregateListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.aggregate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregate([NotNull] PseudoQueryExpressionParser.AggregateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.aggregate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregate([NotNull] PseudoQueryExpressionParser.AggregateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.aggregateFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregateFunction([NotNull] PseudoQueryExpressionParser.AggregateFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.aggregateFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregateFunction([NotNull] PseudoQueryExpressionParser.AggregateFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.timeFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeFilter([NotNull] PseudoQueryExpressionParser.TimeFilterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.timeFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeFilter([NotNull] PseudoQueryExpressionParser.TimeFilterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.timeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeReference([NotNull] PseudoQueryExpressionParser.TimeReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.timeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeReference([NotNull] PseudoQueryExpressionParser.TimeReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhereClause([NotNull] PseudoQueryExpressionParser.WhereClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhereClause([NotNull] PseudoQueryExpressionParser.WhereClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.preExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreExpression([NotNull] PseudoQueryExpressionParser.PreExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.preExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreExpression([NotNull] PseudoQueryExpressionParser.PreExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.sourceDestSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSourceDestSpecifier([NotNull] PseudoQueryExpressionParser.SourceDestSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.sourceDestSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSourceDestSpecifier([NotNull] PseudoQueryExpressionParser.SourceDestSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] PseudoQueryExpressionParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] PseudoQueryExpressionParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] PseudoQueryExpressionParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] PseudoQueryExpressionParser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterField([NotNull] PseudoQueryExpressionParser.FieldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitField([NotNull] PseudoQueryExpressionParser.FieldContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator([NotNull] PseudoQueryExpressionParser.OperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator([NotNull] PseudoQueryExpressionParser.OperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] PseudoQueryExpressionParser.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] PseudoQueryExpressionParser.ValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PseudoQueryExpressionParser.logicalOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalOperator([NotNull] PseudoQueryExpressionParser.LogicalOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PseudoQueryExpressionParser.logicalOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalOperator([NotNull] PseudoQueryExpressionParser.LogicalOperatorContext context);
}
