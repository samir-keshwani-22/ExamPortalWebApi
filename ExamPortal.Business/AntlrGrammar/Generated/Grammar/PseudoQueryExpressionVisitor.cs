//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./Grammar/PseudoQueryExpression.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="PseudoQueryExpressionParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IPseudoQueryExpressionVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStart([NotNull] PseudoQueryExpressionParser.StartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuery([NotNull] PseudoQueryExpressionParser.QueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.aggregateQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAggregateQuery([NotNull] PseudoQueryExpressionParser.AggregateQueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.aggregateList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAggregateList([NotNull] PseudoQueryExpressionParser.AggregateListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.aggregate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAggregate([NotNull] PseudoQueryExpressionParser.AggregateContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.aggregateFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAggregateFunction([NotNull] PseudoQueryExpressionParser.AggregateFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.timeFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeFilter([NotNull] PseudoQueryExpressionParser.TimeFilterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.timeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeReference([NotNull] PseudoQueryExpressionParser.TimeReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhereClause([NotNull] PseudoQueryExpressionParser.WhereClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.preExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreExpression([NotNull] PseudoQueryExpressionParser.PreExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.sourceDestSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSourceDestSpecifier([NotNull] PseudoQueryExpressionParser.SourceDestSpecifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] PseudoQueryExpressionParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] PseudoQueryExpressionParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitField([NotNull] PseudoQueryExpressionParser.FieldContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator([NotNull] PseudoQueryExpressionParser.OperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue([NotNull] PseudoQueryExpressionParser.ValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PseudoQueryExpressionParser.logicalOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOperator([NotNull] PseudoQueryExpressionParser.LogicalOperatorContext context);
}
