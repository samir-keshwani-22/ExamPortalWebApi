//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./Grammar/Triggers.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="TriggersParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface ITriggersListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="TriggersParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] TriggersParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TriggersParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] TriggersParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TriggersParser.trigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrigger([NotNull] TriggersParser.TriggerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TriggersParser.trigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrigger([NotNull] TriggersParser.TriggerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TriggersParser.aggregateTrigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregateTrigger([NotNull] TriggersParser.AggregateTriggerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TriggersParser.aggregateTrigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregateTrigger([NotNull] TriggersParser.AggregateTriggerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TriggersParser.aggregateList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregateList([NotNull] TriggersParser.AggregateListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TriggersParser.aggregateList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregateList([NotNull] TriggersParser.AggregateListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TriggersParser.aggregate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregate([NotNull] TriggersParser.AggregateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TriggersParser.aggregate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregate([NotNull] TriggersParser.AggregateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TriggersParser.aggregateFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregateFunction([NotNull] TriggersParser.AggregateFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TriggersParser.aggregateFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregateFunction([NotNull] TriggersParser.AggregateFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TriggersParser.preExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreExpression([NotNull] TriggersParser.PreExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TriggersParser.preExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreExpression([NotNull] TriggersParser.PreExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TriggersParser.sourceDestSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSourceDestSpecifier([NotNull] TriggersParser.SourceDestSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TriggersParser.sourceDestSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSourceDestSpecifier([NotNull] TriggersParser.SourceDestSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TriggersParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] TriggersParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TriggersParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] TriggersParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TriggersParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] TriggersParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TriggersParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] TriggersParser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TriggersParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterField([NotNull] TriggersParser.FieldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TriggersParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitField([NotNull] TriggersParser.FieldContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TriggersParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator([NotNull] TriggersParser.OperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TriggersParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator([NotNull] TriggersParser.OperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TriggersParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] TriggersParser.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TriggersParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] TriggersParser.ValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TriggersParser.logicalOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalOperator([NotNull] TriggersParser.LogicalOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TriggersParser.logicalOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalOperator([NotNull] TriggersParser.LogicalOperatorContext context);
}
